<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExecutar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rMNLiP8DSDT2l+HvNjkAAAAASUVORK5CYII=
</value>
  </data>
</root>